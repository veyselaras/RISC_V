LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;

ENTITY REGISTER_FILE IS
PORT
(
	CLK						: IN STD_LOGIC;
	--INPUTS
	I_READ_REGISTER_1		: IN STD_LOGIC_VECTOR(4 DOWNTO 0);
	I_READ_REGISTER_2		: IN STD_LOGIC_VECTOR(4 DOWNTO 0);
	I_WRITE_REGISTER		: IN STD_LOGIC_VECTOR(4 DOWNTO 0);
	I_WRITE_DATA			: IN STD_LOGIC_VECTOR(4 DOWNTO 0);
	--1'SE YAZ 0'SA YAZMA
	I_CONTROL_REGWRITE		: IN STD_LOGIC;
	
	--OUTPUTS
	O_READ_DATA_1			: OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
	O_READ_DATA_2			: OUT STD_LOGIC_VECTOR(31 DOWNTO 0)
);
END REGISTER_FILE;

ARCHITECTURE ARCH_OF_REGISTER_FILE OF REGISTER_FILE IS

	TYPE MEM IS ARRAY(0 TO 31) OF STD_LOGIC_VECTOR(31 DOWNTO 0);
	
	SIGNAL RAM_BLOCK: MEM := (OTHERS (OTHERS => '0'));
	SIGNAL READ_RAM_REGISTER_1: STD_LOGIC_VECTOR(4 DOWNTO 0);
	SIGNAL READ_RAM_REGISTER_2: STD_LOGIC_VECTOR(4 DOWNTO 0);
	
BEGIN
	READ_REGISTERS:PROCESS(CLK)
	BEGIN
		IF (RISING_EDGE(CLK)) THEN
			IF(WE = '0') THEN
				READ_RAM_REGISTER_1 <= I_READ_REGISTER_1;
				READ_RAM_REGISTER_2 <= I_READ_REGISTER_2;
			ELSE
				RAM_BLOCK(I_WRITE_REGISTER) <= I_WRITE_DATA;
			END IF;	
		END IF;
	END PROCESS;
	O_READ_DATA_1 <= RAM_BLOCK(READ_RAM_REGISTER_1);
	O_READ_DATA_2 <= RAM_BLOCK(READ_RAM_REGISTER_2);
	
END ARCH_OF_REGISTER_FILE;